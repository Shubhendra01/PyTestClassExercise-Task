<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="1" tests="8" time="0.111" timestamp="2022-03-29T18:09:52.804163" hostname="DESKTOP-MHE75P8"><testcase classname="test_main" name="test_CheckPrime[5-False]" time="0.001"><skipped type="pytest.xfail" message="" /></testcase><testcase classname="test_main" name="test_CheckPrime[2-True]" time="0.001" /><testcase classname="test_main" name="test_CheckPrime[10-False]" time="0.001" /><testcase classname="test_main" name="test_CheckPrime[7-True]" time="0.001" /><testcase classname="test_main" name="test_CheckPalindrome[55-False]" time="0.001"><failure message="assert True == False">num = 55, output = False

    @pytest.mark.parametrize("num,output", [(55, False), (2, True), (10, False), (77, True)])
    def test_CheckPalindrome(num, output):
        result = main.CheckPalindrome(num)
&gt;       assert result == output
E       assert True == False

test_main.py:16: AssertionError</failure></testcase><testcase classname="test_main" name="test_CheckPalindrome[2-True]" time="0.001" /><testcase classname="test_main" name="test_CheckPalindrome[10-False]" time="0.001" /><testcase classname="test_main" name="test_CheckPalindrome[77-True]" time="0.001" /></testsuite></testsuites>